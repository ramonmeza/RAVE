name: Build & Release RAVE

on:
  push:
    branches:
      - main

env:
  RAVE_DIST_FOLDER: dist
  RAVE_ARCHIVE_FILENAME: RAVE-latest
  PYTHON_VERSION: 3.12.0
  POETRY_VERSION: 1.7.0

jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Checkout RAVE repository
        uses: actions/checkout@v4
      
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create cache for Poetry's virtual environment
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install RAVE dependencies
        run: poetry install

      - name: Build RAVE using PyInstaller
        run: poetry run pyinstaller --name "RAVE" --windowed --onefile --hidden-import moderngl_window.context.pyglet --hidden-import glcontext --clean cli.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RAVE_ARCHIVE_FILENAME }}
          path: ${{ env.RAVE_DIST_FOLDER }}
          if-no-files-found: error
  
  Release:
    needs: Build
    runs-on: windows-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.RAVE_DIST_FOLDER }}
          name: ${{ env.RAVE_ARCHIVE_FILENAME }}

      - name: Archive artifacts for release
        uses: thedoctor0/zip-release@0.7.5
        with:
          directory: ${{ env.RAVE_DIST_FOLDER }}
          filename: ${{ env.RAVE_ARCHIVE_FILENAME }}.zip
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Archive
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.RAVE_DIST_FOLDER }}/${{ env.RAVE_ARCHIVE_FILENAME }}.zip
          asset_name: ${{ env.RAVE_ARCHIVE_FILENAME }}.zip
          asset_content_type: application/zip
